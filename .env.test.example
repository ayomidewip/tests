# ==============================================================================
# TEST ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file contains the configuration for running integration tests.
# Copy this file to .env.test and configure with your test environment settings.
#
# IMPORTANT: Tests run against REAL MongoDB and Redis instances.
# Use separate test databases to avoid conflicts with development data.


# ==============================================================================
# APPLICATION CONFIGURATION
# ==============================================================================

# Application name (used in logs, emails, and 2FA setup)
APP_NAME=App Base Test

# Server port (tests use dynamic ports 8380-8389, this is a fallback)
PORT=8380
PORT_RANGE_MIN=8380
PORT_RANGE_MAX=8389

# Environment mode (should always be 'test' for test suite)
NODE_ENV=test


# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# MongoDB connection string for TESTING
# CRITICAL: Use a separate test database or cluster to avoid data loss
# Tests create and drop databases with pattern: test-{suite}-{timestamp}
# Example: test-auth-1234567890, test-file-1234567891, etc.
# IMPORTANT: Database name MUST come BEFORE the ? query parameters for test isolation to work
# Format: mongodb+srv://user:pass@host/database-name?params
MONGODB_URI=mongodb+srv://username:password@your-test-cluster.mongodb.net/app-base-test-db?retryWrites=true&w=majority&appName=app-base-test
DB_CLEANUP=true

# ==============================================================================
# AUTHENTICATION & SECURITY
# ==============================================================================

# JWT Access Token Secret (generate using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))")
# Can use same secrets as development or generate new ones for testing
ACCESS_TOKEN_SECRET=replace_with_random_generated_secret_at_least_32_chars_long

# JWT Refresh Token Secret (generate a different secret from access token)
REFRESH_TOKEN_SECRET=replace_with_different_random_generated_secret_at_least_32_chars_long

# Token expiration times (format: 20m, 1h, 7d, etc.)
# Shorter expiry for faster test execution
ACCESS_TOKEN_EXPIRY=20m
REFRESH_TOKEN_EXPIRY=2d


# ==============================================================================
# REDIS CACHE CONFIGURATION
# ==============================================================================

# Enable or disable Redis caching (true/false)
# Tests will work with or without Redis, but Redis is recommended for full coverage
CACHE_ENABLED=true

# Redis server connection
REDIS_HOST=localhost
REDIS_PORT=6379

# Cache cleanup service configuration
CACHE_CLEANUP_ENABLED=true
CACHE_CLEANUP_INTERVAL_HOURS=24
CACHE_CLEANUP_MIN_AGE_HOURS=2
CACHE_CLEANUP_MAX_KEYS_PER_RUN=500


# ==============================================================================
# FILE UPLOAD & COMPRESSION
# ==============================================================================

# Maximum request payload size (controls file upload limit)
# Set to reasonable limit for tests - allows file operations and versioning
MAX_REQUEST_SIZE=50mb

# Compression settings
COMPRESSION_MIN_SIZE=1024
COMPRESSION_MIN_RATIO=0.05

# Blocked file extensions (comma-separated, applies to upload and create endpoints)
BLOCKED_FILE_EXTENSIONS=.exe,.bat,.cmd,.scr,.vbs


# ==============================================================================
# YJS COLLABORATIVE EDITING
# ==============================================================================

# MongoDB collection name for storing Yjs documents
YJS_COLLECTION_NAME=yjs-documents-test

# Number of updates to batch before flushing to persistence layer
YJS_FLUSH_SIZE=100

# Milliseconds to wait before persisting changes (debounce delay)
YJS_DEBOUNCE_DELAY=2000

# Redis Pub/Sub scaling (should be disabled for tests)
YJS_REDIS_ENABLED=false

# Redis key prefix for Yjs documents (required even if Redis disabled)
YJS_REDIS_PREFIX=yjs-test:

# Redis channel prefix for document synchronization (required even if Redis disabled)
YJS_REDIS_CHANNEL_PREFIX=yjs-test-doc:


# ==============================================================================
# RATE LIMITING
# ==============================================================================

# General API rate limiting (applies to /api/* routes)
# Higher limits for tests to avoid rate limit failures
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=10000

# Authentication rate limiting (applies to /api/v1/auth/* routes)
# Higher limits for tests to avoid rate limit failures
RATE_LIMIT_AUTH_WINDOW_MS=60000
RATE_LIMIT_AUTH_MAX_REQUESTS=1000


# ==============================================================================
# LOGGING
# ==============================================================================

# Log level (options: error, warn, info, http, verbose, debug, silly)
# Use 'error' or 'warn' to reduce test output noise
LOG_LEVEL=error


# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================

# Allowed origins (comma-separated list)
# Tests use localhost with dynamic ports, so include common test ports
ALLOWED_ORIGINS=http://localhost:8380,http://localhost:8381,http://localhost:8382,http://localhost:8383,http://localhost:8384,http://localhost:8385,http://localhost:8386,http://localhost:8387,http://localhost:8388,http://localhost:8389


# ==============================================================================
# EMAIL SERVICE (SMTP) - OPTIONAL FOR TESTS
# ==============================================================================

# Enable or disable email service (true/false)
# Set to false to skip email tests if you don't have SMTP configured
EMAIL_ENABLED=false

# SMTP server configuration (only needed if EMAIL_ENABLED=true)
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_USER=test-account@example.com
EMAIL_PASS=your_test_email_password_or_app_password

# Email sender address
EMAIL_FROM=test-noreply@example.com

# Application URL (used in email links for verification, password reset, etc.)
# Should point to test frontend or localhost
APP_URL=http://localhost:8380
